/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package libraryproject;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author cstuser
 */
public class RecordManageUI extends javax.swing.JFrame {

    ArrayList<Record> records = new ArrayList<>();
    Record myRecord = new Record();
    RecordEditUI recordEditUI;
    DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
    /**
     * Creates new form RecordManageUI
     */
    public RecordManageUI() {
        initComponents();
        GetRecordList();
        if (records != null && !records.isEmpty()) {
            
            DefaultListModel model = new DefaultListModel();
            String[] recordsInfo = new String[records.size()];
            for(int i = 0; i < recordsInfo.length; i++) {
                recordsInfo[i] = records.get(i).getRecordId() + "//" + records.get(i).getUsername()
                        + "//" + records.get(i).getBid() + "//" + records.get(i).getBorrowTime().toString()
                        + "//" + records.get(i).getDueTime().toString() + "//" + records.get(i).getPenalty()
                        + "//" + records.get(i).getIsReturn();
                model.addElement(recordsInfo[i]);
            }
            recordL.setModel(model);
        }
        setVisible(true);
    }
    
    public void GetRecordList() { 
        records = new ArrayList<Record>();
        records = OracleConnect.doSelectAllRecords();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        recordL = new javax.swing.JList();
        updateB = new javax.swing.JButton();
        deleteB = new javax.swing.JButton();
        cancelB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Library System - Records Management");

        jScrollPane1.setViewportView(recordL);

        updateB.setText("Update");
        updateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBActionPerformed(evt);
            }
        });

        deleteB.setText("Delete");
        deleteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBActionPerformed(evt);
            }
        });

        cancelB.setText("Cancel");
        cancelB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(updateB)
                        .addGap(18, 18, 18)
                        .addComponent(deleteB)
                        .addGap(18, 18, 18)
                        .addComponent(cancelB))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateB)
                    .addComponent(deleteB)
                    .addComponent(cancelB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBActionPerformed
        setVisible(false);
    }//GEN-LAST:event_cancelBActionPerformed

    private void deleteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBActionPerformed
        String[] recordContent = recordL.getSelectedValue().toString().split("//");
        if (recordContent.length == 0) {
            JOptionPane.showMessageDialog(null, "Please select a record in list", "Delete Borrow Record", JOptionPane.INFORMATION_MESSAGE);
        } else {
            myRecord.setRecordId(recordContent[0]);
            myRecord.setUsername(recordContent[1]);
            myRecord.setBid(Integer.parseInt(recordContent[2]));
            myRecord.setPenalty(Double.parseDouble(recordContent[5]));
            myRecord.setIsReturn(Integer.parseInt(recordContent[6]));
            try {
                Date date1 = format.parse(recordContent[3]);
                Date date2 = format.parse(recordContent[4]);
                myRecord.setBorrowTime(date1);
                myRecord.setDueTime(date2);
            } catch (ParseException ex) {
                Logger.getLogger(RecordManageUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            OracleConnect.doDeleteRecord(myRecord);
        }
    }//GEN-LAST:event_deleteBActionPerformed

    private void updateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBActionPerformed
        String[] recordContent = recordL.getSelectedValue().toString().split("//");
        if (recordContent.length == 0) {
            JOptionPane.showMessageDialog(null, "Please select a record in list", "Delete Borrow Record", JOptionPane.INFORMATION_MESSAGE);
        } else {
            myRecord.setRecordId(recordContent[0]);
            myRecord.setUsername(recordContent[1]);
            myRecord.setBid(Integer.parseInt(recordContent[2]));
            myRecord.setPenalty(Double.parseDouble(recordContent[5]));
            myRecord.setIsReturn(Integer.parseInt(recordContent[6]));
            try {
                Date date1 = format.parse(recordContent[3]);
                Date date2 = format.parse(recordContent[4]);
                myRecord.setBorrowTime(date1);
                myRecord.setDueTime(date2);
            } catch (ParseException ex) {
                Logger.getLogger(RecordManageUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            recordEditUI = new RecordEditUI(myRecord);
        }
    }//GEN-LAST:event_updateBActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelB;
    private javax.swing.JButton deleteB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList recordL;
    private javax.swing.JButton updateB;
    // End of variables declaration//GEN-END:variables
}
